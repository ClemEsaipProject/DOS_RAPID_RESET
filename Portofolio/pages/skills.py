import streamlit as st
import plotly.graph_objects as go

def skills_show():
    st.header("Mes Comp√©tences")
    
    # Navigation horizontale
    tab1, tab2, tab3 = st.tabs(["üíª Hard Skills", "üß† Soft Skills", "üîÑ Comp√©tences Transversales"])
    
    with tab1:
        col1, col2 = st.columns(2)
        with col1:
            # Graphique en √©toile
            categories = [
                'Architecture technique', 'Administration syst√®me',
                'D√©veloppement logiciel', 'Ing√©nierie des donn√©es',
                'M√©thodologies', 'Web et Mobile',
                'Cybers√©curit√©', 'Outils et technologies',
                'R√©seaux', 'Math√©matiques appliqu√©es'
            ]
            values = [4, 4, 5, 4, 4, 5, 3, 4, 3, 3]

            fig = go.Figure(data=go.Scatterpolar(
                r=values,
                theta=categories,
                fill='toself'
            ))
            fig.update_layout(polar=dict(radialaxis=dict(visible=True, range=[0, 5])), showlegend=False)
            st.plotly_chart(fig, use_container_width=True)
        
        with col2:
            st.subheader("D√©tail des comp√©tences")
            hard_skills = [
                "Architecture technique : Conception de r√©seaux, th√©orie des graphes",
                "Administration syst√®me : Linux, supervision d'infrastructures",
                "D√©veloppement logiciel : Python, PHP, Java, HTML/CSS, JavaScript, Flutter",
                "Ing√©nierie des donn√©es : Bases de donn√©es relationnelles, SQL, conception et gestion",
                "M√©thodologies : UML, sp√©cification et tests, gestion de projet",
                "Web et Mobile : Cr√©ation de sites web, e-commerce, d√©veloppement d'applications",
                "Cybers√©curit√© : Diagnostic de s√©curit√©, tests de p√©n√©tration",
                "Outils et technologies : Git, GitHub, GitLab, Suite Microsoft Office",
                "R√©seaux : Technologies Cisco, Opendaylight",
                "Math√©matiques appliqu√©es : Analyse, math√©matiques pour le num√©rique"
            ]
            for skill in hard_skills:
                st.markdown(f"- {skill}")
    
    with tab2:
        col1, col2 = st.columns(2)
        with col2:
            # Graphique en barres horizontales pour les Soft Skills
            soft_skills = [
                "Communication",
                "Cr√©ativit√©", 
                "R√©solution de probl√®mes",
                "Pens√©e critique",
                "Gestion du stress", 
                "Intelligence √©motionnelle"
            ]
            skill_levels = [4, 3, 5, 4, 3, 4]

            fig = go.Figure(go.Bar(
                x=skill_levels,
                y=soft_skills,
                orientation='h',
                marker_color='rgba(50, 171, 96, 0.7)'
            ))
            fig.update_layout(title="Niveau de Soft Skills", xaxis_title="Niveau de comp√©tence", yaxis_title="Comp√©tences", height=400)
            st.plotly_chart(fig, use_container_width=True)
        
        with col1:
            st.subheader("D√©tail des Soft Skills")
            for skill, level in zip(soft_skills, skill_levels):
                st.markdown(f"- **{skill}**: Niveau {level}/5")
    
    with tab3:
        col1, col2 = st.columns(2)
        with col1:
            # Graphique radar pour Comp√©tences Transversales
            transversal_skills = [
                "Utilisation des outils num√©riques",
                "Esprit d'√©quipe", 
                "Autonomie",
                "Capacit√© d'adaptation", 
                "Esprit de synth√®se",
                "M√©thodologie"
            ]
            skill_levels = [4, 4, 5, 4, 3, 4]

            fig = go.Figure(data=go.Scatterpolar(
                r=skill_levels,
                theta=transversal_skills,
                fill='toself'
            ))
            fig.update_layout(polar=dict(radialaxis=dict(visible=True, range=[0, 5])), showlegend=False, title="Comp√©tences Transversales")
            st.plotly_chart(fig, use_container_width=True)
        
        with col2:
            st.subheader("D√©tail des Comp√©tences Transversales")
            for skill, level in zip(transversal_skills, skill_levels):
                st.markdown(f"- **{skill}**: Niveau {level}/5")